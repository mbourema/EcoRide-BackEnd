nelmio_api_doc:
    documentation:
        info:
            title: "Covoiturage API"
            description: "API pour gérer les covoiturages"
            version: "1.0.0"
        components:
            securitySchemes:
                X-AUTH-TOKEN:
                    type: apiKey
                    name: X-AUTH-TOKEN
                    in: header
        security:
            - X-AUTH-TOKEN: []
        paths:
            # Ajout des routes pour CovoiturageController
            /covoiturage/list:
                get:
                    tags: ["Covoiturage"]
                    summary: "Récupérer la liste des covoiturages"
                    description: "Cette méthode permet de récupérer la liste de tous les covoiturages."
                    responses:
                        200:
                            description: "Liste des covoiturages"
                            content:
                                application/json:
                                    schema:
                                        type: array
                                        items:
                                            type: object
                                            properties:
                                                covoiturage_id:
                                                    type: integer
                                                    example: 1
                                                date_depart:
                                                    type: string
                                                    format: date-time
                                                    example: "2025-03-01T08:00:00"
                                                lieu_depart:
                                                    type: string
                                                    example: "Paris"
                                                date_arrivee:
                                                    type: string
                                                    format: date-time
                                                    example: "2025-03-01T10:00:00"
                                                lieu_arrivee:
                                                    type: string
                                                    example: "Lyon"
                                                statut:
                                                    type: string
                                                    example: "Disponible"
                                                nb_places:
                                                    type: integer
                                                    example: 4
                                                prix_personne:
                                                    type: number
                                                    format: float
                                                    example: 15.50
                                                voiture_id:
                                                    type: integer
                                                    example: 1
                                                conducteur_id:
                                                    type: integer
                                                    example: 8
                                                pseudo_conducteur:
                                                    type: string
                                                    example: "SpaaceTree"
                                                email_conducteur:
                                                    type: string
                                                    example: "test@test.com"
            /covoiturage/add:
                post:
                    tags: ["Covoiturage"]
                    summary: "Ajouter un nouveau covoiturage"
                    description: "Cette méthode permet d'ajouter un nouveau covoiturage."
                    requestBody:
                        required: true
                        content:
                            application/json:
                                schema:
                                    type: object
                                    required:
                                        - date_depart
                                        - lieu_depart
                                        - date_arrivee
                                        - lieu_arrivee
                                        - nb_places
                                        - prix_personne
                                        - voiture_id
                                        - conducteur_id
                                        - pseudo_conducteur
                                    properties:
                                        date_depart:
                                            type: string
                                            format: date-time
                                            example: "2025-03-01T08:00:00"
                                        lieu_depart:
                                            type: string
                                            example: "Paris"
                                        date_arrivee:
                                            type: string
                                            format: date-time
                                            example: "2025-03-01T10:00:00"
                                        lieu_arrivee:
                                            type: string
                                            example: "Lyon"
                                        nb_places:
                                            type: integer
                                            example: 4
                                        prix_personne:
                                            type: number
                                            format: float
                                            example: 15.50
                                        voiture_id:
                                            type: integer
                                            example: 1
                                        conducteur_id:
                                            type: integer
                                            example: 8
                                        pseudo_conducteur:
                                            type: string
                                            example: "SpaaceTree"
                                        email_conducteur:
                                                    type: string
                                                    example: "test@test.com"
                    responses:
                        201:
                            description: "Covoiturage ajouté avec succès"
                            content:
                                application/json:
                                    schema:
                                        type: object
                                        properties:
                                            message:
                                                type: string
                                                example: "Covoiturage ajouté avec succès"
            /covoiturage/{id}:
                get:
                    tags: ["Covoiturage"]
                    summary: "Afficher un covoiturage par ID"
                    description: "Cette méthode permet de récupérer un covoiturage spécifique par ID."
                    parameters:
                        - name: id
                          in: path
                          required: true
                          description: "ID du covoiturage à afficher"
                          schema:
                            type: integer
                            example: 1
                    responses:
                        200:
                            description: "Covoiturage trouvé avec succès"
                            content:
                                application/json:
                                    schema:
                                        type: object
                                        properties:
                                            covoiturage_id:
                                                type: integer
                                                example: 1
                                            date_depart:
                                                type: string
                                                format: date-time
                                                example: "2025-03-01T08:00:00"
                                            lieu_depart:
                                                type: string
                                                example: "Paris"
                                            date_arrivee:
                                                type: string
                                                format: date-time
                                                example: "2025-03-01T10:00:00"
                                            lieu_arrivee:
                                                type: string
                                                example: "Lyon"
                                            statut:
                                                type: string
                                                example: "Disponible"
                                            nb_places:
                                                type: integer
                                                example: 4
                                            prix_personne:
                                                type: number
                                                format: float
                                                example: 15.50
                                            conducteur_id:
                                                type: integer
                                                example: 1
                                            pseudo_conducteur:
                                                type: string
                                                example: "SpaaceTree"
                                            email_conducteur:
                                                    type: string
                                                    example: "test@test.com"
                        404:
                            description: "Covoiturage non trouvé"
            /covoiturage/delete/{id}:
                delete:
                    tags: ["Covoiturage"]
                    summary: "Supprimmer un covoiturage"
                    description: "Cette méthode permet de supprimmer un covoiturage."
                    parameters:
                        - name: id
                          in: path
                          required: true
                          description: "ID du covoiturage à supprimmer"
                          schema:
                            type: integer
                    responses:
                        200:
                            description: "Covoiturage supprimmé avec succès"
                        404:
                            description: "Covoiturage non trouvé"
            # Ajout des routes pour AvisController
            /avis/add:
                post:
                    tags: ["Avis"]
                    summary: "Ajouter un nouvel avis"
                    description: "Cette méthode permet d'ajouter un avis pour un covoiturage."
                    requestBody:
                        required: true
                        content:
                            application/json:
                                schema:
                                    type: object
                                    required:
                                        - utilisateur_id_passager
                                        - covoiturage_id
                                        - note
                                        - signale
                                        - commentaire
                                    properties:
                                        utilisateur_id_passager:
                                            type: integer
                                            example: 2
                                        covoiturage_id:
                                            type: integer
                                            example: 2
                                        note:
                                            type: number
                                            format: float
                                            example: 4.5
                                        signale:
                                            type: boolean
                                            example: false
                                        commentaire:
                                            type: string
                                            example: "cetait cool"
                                        justification:
                                            type: string
                                            example: "Conducteur froid"
                    responses:
                        201:
                            description: "Avis ajouté avec succès"
                            content:
                                application/json:
                                    schema:
                                        type: object
                                        properties:
                                            message:
                                                type: string
                                                example: "Avis ajouté avec succès"
                        400:
                            description: "Données manquantes"
                            content:
                                application/json:
                                    schema:
                                        type: object
                                        properties:
                                            error:
                                                type: string
                                                example: "Donnees manquantes"
            /avis/update/{id}:
                patch:
                    tags: ["Avis"]
                    summary: "Mettre à jour la validation d'un avis"
                    description: "Cette méthode permet à un employé du site de modifier la validation d'un avis après soumission."
                    parameters:
                        - name: id
                          in: path
                          required: true
                          description: "L'ID de l'avis à mettre à jour"
                          schema:
                              type: string
                              example: "65dfb2e8d8f91a001c3e3a92"
                    requestBody:
                        required: true
                        content:
                            application/json:
                                schema:
                                    type: object
                                    required:
                                        - validation
                                    properties:
                                        validation:
                                            type: boolean
                                            description: "Statut de validation de l'avis"
                                            example: true
                    responses:
                        200:
                            description: "Validation mise à jour avec succès"
                            content:
                                application/json:
                                    schema:
                                        type: object
                                        properties:
                                            message:
                                                type: string
                                                example: "Validation de l'avis mise à jour avec succès."
                        400:
                            description: "Requête invalide (champs manquants ou incorrects)"
                            content:
                                application/json:
                                    schema:
                                        type: object
                                        properties:
                                            error:
                                                type: string
                                                example: "Le champ validation est manquant."
                        404:
                            description: "Avis non trouvé"
                            content:
                                application/json:
                                    schema:
                                        type: object
                                        properties:
                                            error:
                                                type: string
                                                example: "Avis non trouvé."
            /avis/fulllist:
                get:
                    tags: ["Avis"]
                    summary: "Récupérer la liste de tout les avis"
                    description: "Cette méthode permet de récupérer tous les avis"
                    responses:
                        200:
                            description: "Liste des avis"
                            content:
                                application/json:
                                    schema:
                                        type: array
                                        items:
                                            type: object
                                            properties:
                                                id:
                                                    type: integer
                                                    example: 1
                                                pseudo_passager:
                                                    type: string
                                                    example: Paul24
                                                covoiturage_id:
                                                    type: integer
                                                    example: 1
                                                pseudo_conducteur:
                                                    type: string
                                                    example: Fab28
                                                date_depart:
                                                    type: string
                                                    format: date-time
                                                    example: "2025-03-01T08:00:00"
                                                date_arrivee:
                                                    type: string
                                                    format: date-time
                                                    example: "2025-03-01T10:00:00"
                                                commentaire:
                                                    type: string
                                                    example: "Très bon trajet"
                                                note:
                                                    type: number
                                                    format: float
                                                    example: 4.5
                                                signalement:
                                                    type: boolean
                                                    example: true
                                                justification:
                                                    type: string
                                                    example: "Conducteur désagréable"
            /avis/fulllist/conducteur/{pseudo}:
                get:
                    tags: ["Avis"]
                    summary: "Récupérer la liste de tout les avis entier d'un conducteur"
                    description: "Cette méthode permet de récupérer tous les avis entiers d'un conducteur à partir de son pseudo"
                    responses:
                        200:
                            description: "Liste des avis du conducteur"
                            content:
                                application/json:
                                    schema:
                                        type: array
                                        items:
                                            type: object
                                            properties:
                                                id:
                                                    type: integer
                                                    example: 1
                                                pseudo_passager:
                                                    type: string
                                                    example: Paul24
                                                covoiturage_id:
                                                    type: integer
                                                    example: 1
                                                pseudo_conducteur:
                                                    type: string
                                                    example: Fab28
                                                date_depart:
                                                    type: string
                                                    format: date-time
                                                    example: "2025-03-01T08:00:00"
                                                date_arrivee:
                                                    type: string
                                                    format: date-time
                                                    example: "2025-03-01T10:00:00"
                                                commentaire:
                                                    type: string
                                                    example: "Très bon trajet"
                                                note:
                                                    type: number
                                                    format: float
                                                    example: 4.5
                                                signale:
                                                    type: boolean
                                                    example: true
                                                justification:
                                                    type: string
                                                    example: "Conducteur désagréable"
                                                validation:
                                                    type: boolean
                                                    example: true
            # Routes pour MarqueController
            /marque/add:
                post:
                    tags: ["Marque"]
                    summary: "Ajouter une marque"
                    description: "Cette méthode permet d'ajouter une nouvelle marque."
                    requestBody:
                        required: true
                        content:
                            application/json:
                                schema:
                                    type: object
                                    required:
                                        - libelle
                                    properties:
                                        libelle:
                                            type: string
                                            example: "Peugeot"
                    responses:
                        201:
                            description: "Marque ajoutée avec succès"
                            content:
                                application/json:
                                    schema:
                                        type: object
                                        properties:
                                            message:
                                                type: string
                                                example: "Marque ajoutée avec succès"
                        400:
                            description: "Données manquantes"
                            content:
                                application/json:
                                    schema:
                                        type: object
                                        properties:
                                            error:
                                                type: string
                                                example: "Données manquantes"
            /marque/{id}:
                get:
                    tags: ["Marque"]
                    summary: "Récupérer une marque par son ID"
                    description: "Cette méthode permet de récupérer une marque en fonction de son ID."
                    parameters:
                        - name: id
                          in: path
                          required: true
                          description: "ID de la marque à récupérer"
                          schema:
                              type: integer
                              example: 123
                    responses:
                        200:
                            description: "Marque trouvée"
                            content:
                                application/json:
                                    schema:
                                        type: object
                                        properties:
                                            marque_id:
                                                type: integer
                                                example: 123
                                            libelle:
                                                type: string
                                                example: "Peugeot"
                        404:
                            description: "Marque non trouvée"
                            content:
                                application/json:
                                    schema:
                                        type: object
                                        properties:
                                            error:
                                                type: string
                                                example: "Marque non trouvée"
            # Routes pour PaiementController
            /paiement/add:
                post:
                    tags: ["Paiement"]
                    summary: "Ajouter un paiement"
                    description: "Cette méthode permet d'ajouter un nouveau paiement."
                    requestBody:
                        required: true
                        content:
                            application/json:
                                schema:
                                    type: object
                                    required:
                                        - utilisateur_id
                                        - covoiturage_id
                                    properties:
                                        utilisateur_id:
                                            type: integer
                                            example: 1
                                        covoiturage_id:
                                            type: integer
                                            example: 1
                    responses:
                        201:
                            description: "Paiement ajouté avec succès"
                            content:
                                application/json:
                                    schema:
                                        type: object
                                        properties:
                                            message:
                                                type: string
                                                example: "Paiement ajouté avec succès"
                                            paiement_id:
                                                type: integer
                                                example: 123
                        400:
                            description: "Données manquantes"
                            content:
                                application/json:
                                    schema:
                                        type: object
                                        properties:
                                            error:
                                                type: string
                                                example: "Données manquantes"
            /paiement/confirmation/{id}:
                get:
                    tags: ["Paiement"]
                    summary: "Envoyer un mail de confirmation pour un covoiturage"
                    description: "Cette méthode permet d'envoyer un email de confirmation a un passager'"
                    parameters:
                        - name: id
                          in: path
                          required: true
                          description: "ID du paiement à récupérer"
                          schema:
                            type: integer
                            example: 123
                    responses:
                        200:
                            description: "Email envoyé"
                            content:
                                application/json:
                                    schema:
                                        type: object
                                        properties:
                                            message:
                                                type: string
                                                example: "Email de confirmation envoyé avec succès"                                   
                        404:
                            description: "Email non envoyé"
                            content:
                                application/json:
                                    schema:
                                        type: object
                                        properties:
                                            error:
                                                type: string
                                                example: "Email non envoyé"
            /paiement/{id}:
                patch:
                    tags: ["Paiement"]
                    summary: "Mettre à jour un paiement"
                    description: "Cette méthode permet de mettre à jour les informations d'un paiement existant."
                    parameters:
                        - name: id
                          in: path
                          required: true
                          description: "ID du paiement à mettre à jour"
                          schema:
                            type: integer
                            example: 123
                    requestBody:
                        required: true
                        content:
                            application/json:
                                schema:
                                    type: object
                                    required:
                                        - avancement
                                    properties:
                                        avancement:
                                            type: string
                                            example: "OK"
                    responses:
                        200:
                            description: "Paiement mis à jour avec succès"
                            content:
                                application/json:
                                    schema:
                                        type: object
                                        properties:
                                            message:
                                                type: string
                                                example: "Paiement mis à jour avec succès"
                                            paiement:
                                                type: object
                                                properties:
                                                    paiement_id:
                                                        type: integer
                                                        example: 123
                                                    utilisateur_id:
                                                        type: integer
                                                        example: 1
                                                    covoiturage_id:
                                                        type: integer
                                                        example: 1
                                                    montant:
                                                        type: number
                                                        format: float
                                                        example: 250.50
                                                    date_paiement:
                                                        type: string
                                                        format: date-time
                                                        example: "2025-02-06T15:00:00"
                                                    avancement:
                                                        type: string
                                                        example: "complet"
                        400:
                            description: "Données manquantes"
                            content:
                                application/json:
                                    schema:
                                        type: object
                                        properties:
                                            error:
                                                type: string
                                                example: "Données manquantes"
                        404:
                            description: "Paiement ou utilisateur non trouvé"
                            content:
                                application/json:
                                    schema:
                                        type: object
                                        properties:
                                            error:
                                                type: string
                                                example: "Paiement ou utilisateur non trouvé"
            /paiements:
                get:
                    tags: ["Paiement"]
                    summary: "Récupérer la liste de tous les paiements"
                    description: "Cette méthode permet de récupérer la liste de tous les paiements effectués."
                    responses:
                        200:
                            description: "Liste des paiements"
                            content:
                                application/json:
                                    schema:
                                        type: array
                                        items:
                                            type: object
                                            properties:
                                                paiement_id:
                                                    type: integer
                                                    example: 123
                                                utilisateur_id:
                                                    type: integer
                                                    example: 1
                                                covoiturage_id:
                                                    type: integer
                                                    example: 1
                                                montant:
                                                    type: number
                                                    format: float
                                                    example: 250.50
                                                date_paiement:
                                                    type: string
                                                    format: date-time
                                                    example: "2025-02-06T15:00:00"
                                                avancement:
                                                    type: string
                                                    example: "complet"
                        404:
                            description: "Aucun paiement trouvé"
                            content:
                                application/json:
                                    schema:
                                        type: object
                                        properties:
                                            message:
                                                type: string
                                                example: "Aucun paiement trouvé"
            /role/{id}:
                get:
                    tags: ["Role"]
                    summary: "Récupérer un rôle par son ID"
                    description: "Cette méthode permet de récupérer un rôle en fonction de son ID."
                    parameters:
                        - name: id
                          in: path
                          required: true
                          description: "ID du rôle à récupérer"
                          schema:
                              type: integer
                              example: 1
                    responses:
                        200:
                            description: "Rôle trouvé"
                            content:
                                application/json:
                                    schema:
                                        type: object
                                        properties:
                                            role_id:
                                                type: integer
                                                example: 1
                                            libelle:
                                                type: string
                                                example: "admin"
                        404:
                            description: "Rôle non trouvé"
                            content:
                                application/json:
                                    schema:
                                        type: object
                                        properties:
                                            error:
                                                type: string
                                                example: "Rôle non trouvé"
            /role/list:
                get:
                    tags: ["Role"]
                    summary: "Lister tous les rôles"
                    description: "Cette méthode permet de récupérer la liste de tous les rôles."
                    responses:
                        200:
                            description: "Liste des rôles"
                            content:
                                application/json:
                                    schema:
                                        type: array
                                        items:
                                            type: object
                                            properties:
                                                role_id:
                                                    type: integer
                                                    example: 1
                                                libelle:
                                                    type: string
                                                    example: "admin"
            # Routes pour SuspensionController
            /suspension/add:
                post:
                    tags: ["Suspension"]
                    summary: "Ajouter une suspension"
                    description: "Cette méthode permet d'ajouter une nouvelle suspension."
                    requestBody:
                        required: true
                        content:
                            application/json:
                                schema:
                                    type: object
                                    required:
                                        - utilisateur_id
                                        - raison
                                        - date_debut
                                        - sanction
                                    properties:
                                        utilisateur_id:
                                            type: integer
                                            example: 8
                                        raison:
                                            type: string
                                            example: "Violation des règles"
                                        date_debut:
                                            type: string
                                            format: date-time
                                            example: "2025-02-06T10:00:00"
                                        date_fin:
                                            type: string
                                            format: date-time
                                            example: "2025-02-10T10:00:00"
                                        sanction:
                                            type: string
                                            example: "Suspension temporaire"
                    responses:
                        201:
                            description: "Suspension ajoutée avec succès"
                            content:
                                application/json:
                                    schema:
                                        type: object
                                        properties:
                                            message:
                                                type: string
                                                example: "Suspension ajoutée avec succès"
                        400:
                            description: "Données manquantes"
                            content:
                                application/json:
                                    schema:
                                        type: object
                                        properties:
                                            error:
                                                type: string
                                                example: "Données manquantes"
            /suspension/{id}:
                get:
                    tags: ["Suspension"]
                    summary: "Récupérer une suspension par son ID"
                    description: "Cette méthode permet de récupérer une suspension en fonction de son ID."
                    parameters:
                        - name: id
                          in: path
                          required: true
                          description: "ID de la suspension à récupérer"
                          schema:
                              type: integer
                              example: 1
                    responses:
                        200:
                            description: "Suspension trouvée"
                            content:
                                application/json:
                                    schema:
                                        type: object
                                        properties:
                                            suspension_id:
                                                type: integer
                                                example: 1
                                            utilisateur_id:
                                                type: integer
                                                example: 1
                                            raison:
                                                type: string
                                                example: "Violation des règles"
                                            date_debut:
                                                type: string
                                                format: date-time
                                                example: "2025-02-06T10:00:00"
                                            date_fin:
                                                type: string
                                                format: date-time
                                                example: "2025-02-10T10:00:00"
                                            sanction:
                                                type: string
                                                example: "Suspension temporaire"
                        404:
                            description: "Suspension non trouvée"
                            content:
                                application/json:
                                    schema:
                                        type: object
                                        properties:
                                            error:
                                                type: string
                                                example: "Suspension non trouvée"
            # Routes pour UtilisateurController
            /api/utilisateurs/reinistialiser-mot-de-passe:
                post:
                    tags: ["Utilisateurs"]
                    summary: "Demande de réinitialisation du mot de passe"
                    description: "Envoie un email avec un lien de réinitialisation contenant un token unique."
                    requestBody:
                        required: true
                        content:
                            application/json:
                                schema:
                                    type: "object"
                                    properties:
                                        email:
                                            type: "string"
                                            format: "email"
                                            example: "utilisateur@example.com"
                    responses:
                        200:
                            description: "Email de réinitialisation envoyé"
                            content:
                                application/json:
                                    schema:
                                        type: "object"
                                        properties:
                                            message:
                                                type: "string"
                                                example: "Email de réinitialisation envoyé"
                        404:
                            description: "Utilisateur non trouvé"
                            content:
                                application/json:
                                    schema:
                                        type: "object"
                                        properties:
                                            message:
                                                type: "string"
                                                example: "Utilisateur non trouvé"

            /api/utilisateurs/reset-password/{token}:
                post:
                    tags: ["Utilisateurs"]
                    summary: "Réinitialiser le mot de passe"
                    description: "Permet de réinitialiser le mot de passe en fournissant un nouveau mot de passe et un token valide."
                    parameters:
                        - name: "token"
                          in: "path"
                          required: true
                          schema:
                            type: "string"
                          description: "Token unique envoyé par email"
                    requestBody:
                        required: true
                        content:
                            application/json:
                                schema:
                                    type: "object"
                                    properties:
                                        mdp:
                                            type: "string"
                                            example: "nouveauMotDePasse123!"
                    responses:
                        200:
                            description: "Réponse en cas de succès ou si un mot de passe doit être soumis"
                            content:
                                application/json:
                                    schema:
                                        oneOf:
                                            - type: "object"
                                              properties:
                                                message:
                                                    type: "string"
                                                    example: "Mot de passe réinitialisé avec succès"
                                            - type: "object"
                                              properties:
                                                message:
                                                    type: "string"
                                                    example: "Merci de soumettre un nouveau mot de passe."
                        400:
                            description: "Lien de réinitialisation invalide ou expiré"
                            content:
                                application/json:
                                    schema:
                                        type: "object"
                                        properties:
                                            message:
                                                type: "string"
                                                example: "Le lien de réinitialisation est invalide ou expiré."
            /api/utilisateurs/liste:
                get:
                    tags: ["Utilisateurs"]
                    summary: "Récupérer la liste des utilisateurs"
                    responses:
                        200:
                            description: "Liste des utilisateurs récupérée avec succès"
                            content:
                                application/json:
                                    schema:
                                        type: array
                                        items:
                                            type: "object"
                                            properties:
                                                id:
                                                    type: "integer"
                                                    example: 1
                                                nom:
                                                    type: "string"
                                                    example: "Dupont"
                                                prenom:
                                                    type: "string"
                                                    example: "Jean"
                                                email:
                                                    type: "string"
                                                    format: "email"
                                                    example: "jean.dupont@example.com"
                                                mdp:
                                                    type: "string"
                                                    example: "yoyo"
                                                telephone:
                                                    type: "string"
                                                    example: "0612345678"
                                                adresse:
                                                    type: "string"
                                                    example: "10 rue de Paris, 75000 Paris"
                                                date_naissance:
                                                    type: "string"
                                                    format: "date"
                                                    example: "1990-05-15"
                                                pseudo:
                                                    type: "string"
                                                    example: "JeanD"
                                                photo:
                                                    type: "string"
                                                    example: "https://example.com/photo.jpg"
                                                fumeur:
                                                    type: "boolean"
                                                    example: false
                                                animal:
                                                    type: "boolean"
                                                    example: false
                                                preference:
                                                    type: "string"
                                                    example: ""
            /api/utilisateurs/details/{id}:
                get:
                    tags: ["Utilisateurs"]
                    summary: "Obtenir les détails d'un utilisateur"
                    parameters:
                        - name: "id"
                          in: "path"
                          required: true
                          description: "ID de l'utilisateur"
                          schema:
                              type: "integer"
                    responses:
                        200:
                            description: "Détails de l'utilisateur"
                            content:
                                application/json:
                                    schema:
                                        type: "object"
                                        properties:
                                            id:
                                                type: "integer"
                                                example: 1
                                            nom:
                                                type: "string"
                                                example: "Dupont"
                                            prenom:
                                                type: "string"
                                                example: "Jean"
                                            email:
                                                type: "string"
                                                format: "email"
                                                example: "jean.dupont@example.com"
                                            mdp:
                                                type: "string"
                                                example: "yoyo"
                                            telephone:
                                                type: "string"
                                                example: "0612345678"
                                            adresse:
                                                type: "string"
                                                example: "10 rue de Paris, 75000 Paris"
                                            date_naissance:
                                                type: "string"
                                                format: "date"
                                                example: "1990-05-15"
                                            pseudo:
                                                type: "string"
                                                example: "JeanD"
                                            photo:
                                                type: "string"
                                                example: "https://example.com/photo.jpg"
                                            fumeur:
                                                type: "boolean"
                                                example: false
                                            animal:
                                                type: "boolean"
                                                example: false
                                            preference:
                                                type: "string"
                                                example: ""
                        404:
                            description: "Utilisateur non trouvé"
            /api/utilisateurs/details/{api_token}:
                get:
                    tags: ["Utilisateurs"]
                    summary: "Obtenir les détails d'un utilisateur"
                    parameters:
                        - name: "api_token"
                          in: "path"
                          required: true
                          description: "api_token de l'utilisateur"
                          schema:
                              type: "string"
                    responses:
                        200:
                            description: "Détails de l'utilisateur"
                            content:
                                application/json:
                                    schema:
                                        type: "object"
                                        properties:
                                            id:
                                                type: "integer"
                                                example: 1
                                            nom:
                                                type: "string"
                                                example: "Dupont"
                                            prenom:
                                                type: "string"
                                                example: "Jean"
                                            email:
                                                type: "string"
                                                format: "email"
                                                example: "jean.dupont@example.com"
                                            mdp:
                                                type: "string"
                                                example: "yoyo"
                                            telephone:
                                                type: "string"
                                                example: "0612345678"
                                            adresse:
                                                type: "string"
                                                example: "10 rue de Paris, 75000 Paris"
                                            date_naissance:
                                                type: "string"
                                                format: "date"
                                                example: "1990-05-15"
                                            pseudo:
                                                type: "string"
                                                example: "JeanD"
                                            photo:
                                                type: "string"
                                                example: "https://example.com/photo.jpg"
                                            fumeur:
                                                type: "boolean"
                                                example: false
                                            animal:
                                                type: "boolean"
                                                example: false
                                            preference:
                                                type: "string"
                                                example: ""
                        404:
                            description: "Utilisateur non trouvé"

            /api/utilisateurs/ajouter:
                post:
                    tags: ["Utilisateurs"]
                    summary: "Créer un nouvel utilisateur"
                    requestBody:
                        required: true
                        content:
                            application/json:
                                schema:
                                    type: "object"
                                    properties:
                                        nom:
                                            type: "string"
                                            example: "Dupont"
                                        prenom:
                                            type: "string"
                                            example: "Jean"
                                        email:
                                            type: "string"
                                            format: "email"
                                            example: "jean.dupont@example.com"
                                        mdp:
                                            type: "string"
                                            example: "yoyo"
                                        telephone:
                                            type: "string"
                                            example: "0612345678"
                                        adresse:
                                            type: "string"
                                            example: "10 rue de Paris, 75000 Paris"
                                        date_naissance:
                                            type: "string"
                                            format: "date"
                                            example: "1990-05-15"
                                        pseudo:
                                            type: "string"
                                            example: "JeanD"
                                        photo:
                                            type: "string"
                                            example: "https://example.com/photo.jpg"
                                        roles:
                                            type: "array"
                                            items:
                                                type: "integer"
                                            example: [1]
                                        fumeur:
                                            type: "boolean"
                                            example: false
                                        animal:
                                            type: "boolean"
                                            example: false
                                        preference:
                                            type: "string"
                                            example: ""

                    responses:
                        201:
                            description: "Utilisateur créé avec succès"
                            content:
                                application/json:
                                    schema:
                                        type: "object"
                                        properties:
                                            id:
                                                type: "integer"
                                                example: 1
                                            nom:
                                                type: "string"
                                                example: "Dupont"
                                            prenom:
                                                type: "string"
                                                example: "Jean"
                                            email:
                                                type: "string"
                                                format: "email"
                                                example: "jean.dupont@example.com"
                                            mdp:
                                                type: "mdp"
                                                example: "yoyo"
                                            telephone:
                                                type: "string"
                                                example: "0612345678"
                                            adresse:
                                                type: "string"
                                                example: "10 rue de Paris, 75000 Paris"
                                            date_naissance:
                                                type: "string"
                                                format: "date"
                                                example: "1990-05-15"
                                            pseudo:
                                                type: "string"
                                                example: "JeanD"
                                            photo:
                                                type: "string"
                                                example: "https://example.com/photo.jpg"
                                            roles:
                                                type: "array"
                                                items:
                                                    type: "string"
                                                example: ["conducteur"]
                                            fumeur:
                                                type: "boolean"
                                                example: false
                                            animal:
                                                type: "boolean"
                                                example: false
                                            preference:
                                                type: "string"
                                                example: ""

                        400:
                            description: "Données invalides"
            /api/utilisateurs/connexion:
                post:
                    tags: ["Utilisateurs"]
                    summary: "Se connecter"
                    requestBody:
                        required: true
                        content:
                            application/json:
                                schema:
                                    type: "object"
                                    properties:
                                        email:
                                            type: "string"
                                            example: "SpaaceTree"
                                        mdp:
                                            type: "string"
                                            example: "lepassword"
                    responses:
                        201:
                            description: "Connecté !"
                            content:
                                application/json:
                                    schema:
                                        type: "object"
                                        properties:
                                            id:
                                                type: "integer"
                                                example: 1
                                            nom:
                                                type: "string"
                                                example: "Dupont"
                                            prenom:
                                                type: "string"
                                                example: "Jean"
                                            email:
                                                type: "string"
                                                format: "email"
                                                example: "jean.dupont@example.com"
                                            mdp:
                                                type: "string"
                                                example: "yoyo"
                                            telephone:
                                                type: "string"
                                                example: "0612345678"
                                            adresse:
                                                type: "string"
                                                example: "10 rue de Paris, 75000 Paris"
                                            date_naissance:
                                                type: "string"
                                                format: "date"
                                                example: "1990-05-15"
                                            pseudo:
                                                type: "string"
                                                example: "JeanD"
                                            photo:
                                                type: "string"
                                                example: "https://example.com/photo.jpg"
                                            roles:
                                                type: "array"
                                                items:
                                                    type: "string"
                                                    example: ["conducteur"]
                                            fumeur:
                                                type: "boolean"
                                                example: false
                                            animal:
                                                type: "boolean"
                                                example: false
                                            preference:
                                                type: "string"
                                                example: ""
                                            api_token:
                                                type: "string"
                                                example: "34KKDds3455klmKON907"
                        400:
                            description: "Données invalides"
            /api/utilisateurs/modifier/{id}:
                put:
                    tags: ["Utilisateurs"]
                    summary: "Mettre à jour un utilisateur"
                    parameters:
                        - name: "id"
                          in: "path"
                          required: true
                          description: "ID de l'utilisateur"
                          schema:
                              type: "integer"
                    requestBody:
                        required: true
                        content:
                            application/json:
                                schema:
                                    type: "object"
                                    properties:
                                        nom:
                                            type: "string"
                                            example: "Dupont"
                                        prenom:
                                            type: "string"
                                            example: "Jean"
                                        email:
                                            type: "string"
                                            format: "email"
                                            example: "jean.dupont@example.com"
                                        mdp:
                                            type: "string"
                                            example: "yoyo"
                                        telephone:
                                            type: "string"
                                            example: "0612345678"
                                        adresse:
                                            type: "string"
                                            example: "10 rue de Paris, 75000 Paris"
                                        date_naissance:
                                            type: "string"
                                            format: "date"
                                            example: "1990-05-15"
                                        pseudo:
                                            type: "string"
                                            example: "JeanD"
                                        photo:
                                            type: "string"
                                            example: "https://example.com/photo.jpg"
                                        roles:
                                            type: "array"
                                            items:
                                                type: "integer"
                                            example: [2]
                                        fumeur:
                                            type: "boolean"
                                            example: false
                                        animal:
                                            type: "boolean"
                                            example: false
                                        preference:
                                            type: "string"
                                            example: ""

                    responses:
                        200:
                            description: "Utilisateur mis à jour avec succès"
                            content:
                                application/json:
                                    schema:
                                        type: "object"
                                        properties:
                                            id:
                                                type: "integer"
                                                example: 1
                                            nom:
                                                type: "string"
                                                example: "Dupont"
                                            prenom:
                                                type: "string"
                                                example: "Jean"
                                            email:
                                                type: "string"
                                                format: "email"
                                                example: "jean.dupont@example.com"
                                            mdp:
                                                type: "string"
                                                example: "yoyo"
                                            telephone:
                                                type: "string"
                                                example: "0612345678"
                                            adresse:
                                                type: "string"
                                                example: "10 rue de Paris, 75000 Paris"
                                            date_naissance:
                                                type: "string"
                                                format: "date"
                                                example: "1990-05-15"
                                            pseudo:
                                                type: "string"
                                                example: "JeanD"
                                            photo:
                                                type: "string"
                                                example: "https://example.com/photo.jpg"
                                            roles:
                                                type: "array"
                                                items:
                                                    type: "string"
                                                example: ["passager"]
                                            fumeur:
                                                type: "boolean"
                                                example: false
                                            animal:
                                                type: "boolean"
                                                example: false
                                            preference:
                                                type: "string"
                                                example: ""

                        400:
                            description: "Données invalides"
                        404:
                            description: "Utilisateur non trouvé"

            /api/utilisateurs/supprimer/{id}:
                delete:
                    tags: ["Utilisateurs"]
                    summary: "Supprimer un utilisateur"
                    parameters:
                        - name: "id"
                          in: "path"
                          required: true
                          description: "ID de l'utilisateur"
                          schema:
                              type: "integer"
                    responses:
                        204:
                            description: "Utilisateur supprimé avec succès"
                        404:
                            description: "Utilisateur non trouvé"
            /api/voitures/liste:
                get:
                    tags: ["Voitures"]
                    summary: "Obtenir la liste des voitures"
                    responses:
                        200:
                            description: "Liste des voitures récupérée avec succès"
                            content:
                                application/json:
                                    schema:
                                        type: array
                                        items:
                                            type: "object"
                                            properties:
                                                id:
                                                    type: "integer"
                                                    example: 1
                                                utilisateur_id:
                                                    type: "integer"
                                                    example: 1
                                                marque_id:
                                                    type: "string"
                                                    example: "Peugeot"
                                                modele:
                                                    type: "string"
                                                    example: "Peugeot 208"
                                                immatriculation:
                                                    type: "string"
                                                    example: "AB-123-CD"
                                                energie:
                                                    type: "string"
                                                    example: "Diesel"
                                                couleur:
                                                    type: "string"
                                                    example: "Rouge"
                                                date_premiere_immatriculation:
                                                    type: "string"
                                                    format: "date"
                                                    example: "2020-06-15"
                                                nb_places:
                                                    type: "integer"
                                                    example: 5

            /api/voitures/details/{id}:
                get:
                    tags: ["Voitures"]
                    summary: "Obtenir les détails d'une voiture"
                    parameters:
                        - name: "id"
                          in: "path"
                          required: true
                          description: "ID de la voiture"
                          schema:
                              type: "integer"
                    responses:
                        200:
                            description: "Détails de la voiture"
                            content:
                                application/json:
                                    schema:
                                        type: "object"
                                        properties:
                                            id:
                                                type: "integer"
                                                example: 1
                                            Marque:
                                                type: "string"
                                                example: "Peugeot"
                                            modele:
                                                type: "string"
                                                example: "Peugeot 208"
                                            immatriculation:
                                                type: "string"
                                                example: "AB-123-CD"
                                            energie:
                                                type: "string"
                                                example: "Diesel"
                                            couleur:
                                                type: "string"
                                                example: "Rouge"
                                            date_premiere_immatriculation:
                                                type: "string"
                                                format: "date"
                                                example: "2020-06-15"
                                            nb_places:
                                                type: "integer"
                                                example: 5
                        404:
                            description: "Voiture non trouvée"
            /api/voitures/ajouter:
                post:
                    tags: ["Voitures"]
                    summary: "Ajouter une nouvelle voiture"
                    requestBody:
                        required: true
                        content:
                            application/json:
                                schema:
                                    type: "object"
                                    properties:
                                        utilisateur_id:
                                            type: "integer"
                                            example: 1
                                        marque_id:
                                            type: "integer"
                                            example: 8
                                        modele:
                                            type: "string"
                                            example: "Peugeot 208"
                                        immatriculation:
                                            type: "string"
                                            example: "AB-123-CD"
                                        energie:
                                            type: "string"
                                            example: "Diesel"
                                        couleur:
                                            type: "string"
                                            example: "Rouge"
                                        date_premiere_immatriculation:
                                            type: "string"
                                            format: "date"
                                            example: "2020-06-15"
                                        nb_places:
                                            type: "integer"
                                            example: 5
                    responses:
                        201:
                            description: "Voiture ajoutée avec succès"
                            content:
                                application/json:
                                    schema:
                                        type: "object"
                                        properties:
                                            id:
                                                type: "integer"
                                                example: 1
                                            utilisateur_id:
                                                type: "integer"
                                                example: 8
                                            modele:
                                                type: "string"
                                                example: "Peugeot 208"
                                            immatriculation:
                                                type: "string"
                                                example: "AB-123-CD"
                                            energie:
                                                type: "string"
                                                example: "Diesel"
                                            couleur:
                                                type: "string"
                                                example: "Rouge"
                                            date_premiere_immatriculation:
                                                type: "string"
                                                format: "date"
                                                example: "2020-06-15"
                                            nb_places:
                                                type: "integer"
                                                example: 5
                        400:
                            description: "Données invalides"

            /api/voitures/modifier/{id}:
                put:
                    tags: ["Voitures"]
                    summary: "Modifier une voiture existante"
                    parameters:
                        - name: "id"
                          in: "path"
                          required: true
                          description: "ID de la voiture"
                          schema:
                              type: "integer"
                    requestBody:
                        required: true
                        content:
                            application/json:
                                schema:
                                    type: "object"
                                    properties:
                                        modele:
                                            type: "string"
                                            example: "Peugeot 208"
                                        immatriculation:
                                            type: "string"
                                            example: "AB-123-CD"
                                        energie:
                                            type: "string"
                                            example: "Diesel"
                                        couleur:
                                            type: "string"
                                            example: "Rouge"
                                        nb_places:
                                            type: "integer"
                                            example: 5
                    responses:
                        200:
                            description: "Voiture modifiée avec succès"
                            content:
                                application/json:
                                    schema:
                                        type: "object"
                                        properties:
                                            id:
                                                type: "integer"
                                                example: 1
                                            utilisateur_id:
                                                type: "integer"
                                                example: 9
                                            modele:
                                                type: "string"
                                                example: "Peugeot 208"
                                            immatriculation:
                                                type: "string"
                                                example: "AB-123-CD"
                                            energie:
                                                type: "string"
                                                example: "Diesel"
                                            couleur:
                                                type: "string"
                                                example: "Rouge"
                                            date_premiere_immatriculation:
                                                type: "string"
                                                format: "date"
                                                example: "2020-06-15"
                                            nb_places:
                                                type: "integer"
                                                example: 5
                        400:
                            description: "Données invalides"
                        404:
                            description: "Voiture non trouvée"
            /api/voitures/supprimer/{id}:
                delete:
                    tags: ["Voitures"]
                    summary: "Supprimer une voiture"
                    parameters:
                        - name: "id"
                          in: "path"
                          required: true
                          description: "ID de la voiture"
                          schema:
                              type: "integer"
                    responses:
                        204:
                            description: "Voiture supprimée avec succès"
                        404:
                            description: "Voiture non trouvée"

