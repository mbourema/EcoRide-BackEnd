security:
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
        App\Entity\Utilisateur:
            algorithm: auto

    providers:
        app_user_provider:
            entity:
                class: App\Entity\Utilisateur
                property: email

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        
        api_doc:
            pattern: ^/api/doc
            security: false  # Désactive totalement la sécurité sur /api/doc

        # Firewall API (gestion des tokens)
        api:
            pattern: ^/
            stateless: true
            provider: app_user_provider
            lazy: true
            custom_authenticators:
                - App\Security\ApiTokenAuthentificatorAuthenticator

        main:
            lazy: true
            provider: app_user_provider
            stateless: false  # false ici car c'est pour login/logout
            json_login:
                check_path: api_utilisateurs_connexion
                username_path: email
                password_path: mdp
                success_handler: App\Security\LoginSuccessHandler
                failure_handler: App\Security\LoginFailureHandler
            logout:
                path: app_logout
                
    access_control:
        - { path: ^/api/doc, roles: IS_AUTHENTICATED_ANONYMOUSLY }  # Autorise l'accès public à la doc
        - { path: ^/api/utilisateurs/ajouter, roles: PUBLIC_ACCESS }
        - { path: ^/api/utilisateurs/connexion, roles: PUBLIC_ACCESS }
        - { path: ^/avis/add, roles: [ROLE_PASSAGER, ROLE_ADMIN] }
        - { path: ^/avis/update/\d+, roles: [ROLE_EMPLOYE, ROLE_ADMIN] }
        - { path: "^/avis/list/conducteur/[a-zA-Z0-9_-]+", roles: [ROLE_PASSAGER, ROLE_EMPLOYE, ROLE_ADMIN, ROLE_CONDUCTEUR] }
        - { path: "^/avis/fulllist/conducteur/[a-zA-Z0-9_-]+", roles: [ROLE_EMPLOYE, ROLE_CONDUCTEUR] }
        - { path: ^/covoiturage/add, roles: [ROLE_CONDUCTEUR, ROLE_ADMIN] }
        - { path: ^/covoiturage/list, roles: [ROLE_PASSAGER, ROLE_CONDUCTEUR, ROLE_EMPLOYE, ROLE_ADMIN] }
        - { path: ^/covoiturage/\d+, roles: [ROLE_EMPLOYE, ROLE_CONDUCTEUR, ROLE_ADMIN, ROLE_PASSAGER] }
        - { path: ^/covoiturage/delete/\d+, roles: [ROLE_EMPLOYE, ROLE_CONDUCTEUR, ROLE_ADMIN] }
        - { path: ^/marque/add, roles: ROLE_ADMIN }
        - { path: ^/marque/\d+, roles: ROLE_ADMIN }
        - { path: ^/paiement/add, roles: [ROLE_PASSAGER, ROLE_CONDUCTEUR, ROLE_EMPLOYE, ROLE_ADMIN] }
        - { path: ^/paiement/\d+, roles: [ROLE_EMPLOYE, ROLE_ADMIN], methods: [GET] }
        - { path: ^/paiement/\d+, roles: [ROLE_EMPLOYE, ROLE_ADMIN], methods: [PATCH] }
        - { path: ^/role/\d+, roles: ROLE_ADMIN }
        - { path: ^/role/list, roles: ROLE_ADMIN }
        - { path: ^/suspension/add, roles: [ROLE_EMPLOYE, ROLE_ADMIN] }
        - { path: ^/suspension/\d+, roles: [ROLE_EMPLOYE, ROLE_ADMIN] }
        - { path: ^/api/utilisateurs/liste, roles: [ROLE_EMPLOYE, ROLE_ADMIN] }
        - { path: ^/api/utilisateurs/details/\d+, roles: [ROLE_PASSAGER, ROLE_CONDUCTEUR, ROLE_EMPLOYE, ROLE_ADMIN] }
        - { path: ^/api/utilisateurs/modifier/\d+, roles: [ROLE_PASSAGER, ROLE_CONDUCTEUR, ROLE_EMPLOYE, ROLE_ADMIN] }
        - { path: ^/api/utilisateurs/supprimer/\d+, roles: [ROLE_PASSAGER, ROLE_CONDUCTEUR, ROLE_EMPLOYE, ROLE_ADMIN] }
        - { path: ^/api/voitures/liste, roles: [ROLE_CONDUCTEUR, ROLE_EMPLOYE, ROLE_ADMIN, ROLE_PASSAGER] }
        - { path: ^/api/voitures/details/\d+, roles: [ROLE_PASSAGER, ROLE_CONDUCTEUR, ROLE_EMPLOYE, ROLE_ADMIN] }
        - { path: ^/api/voitures/ajouter, roles: [ROLE_CONDUCTEUR, ROLE_EMPLOYE, ROLE_ADMIN] }
        - { path: ^/api/voitures/modifier/\d+, roles: [ROLE_CONDUCTEUR, ROLE_EMPLOYE, ROLE_ADMIN] }
        - { path: ^/api/voitures/supprimer/\d+, roles: [ROLE_CONDUCTEUR, ROLE_EMPLOYE, ROLE_ADMIN] }




